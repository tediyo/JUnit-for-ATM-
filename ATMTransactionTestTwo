import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

class ATMTransactionTestTwo {
    
    @BeforeEach
    void setUp() {
        // Reset balance before each test
        ATMTransaction.balance = 10000;
    }

    @Test
    void testBalanceCheck() {
        Balance balanceCheck = new Balance();
        balanceCheck.execute();
        assertEquals(10000, ATMTransaction.balance, "Balance should remain unchanged");
    }

    @Test
    void testWithdrawValidAmount() {
        Withdraw withdraw = new Withdraw();
        ATMTransaction.balance = 5000; // Set a known balance
        withdraw.execute(2000); // Withdraw 2000
        assertEquals(3000, ATMTransaction.balance, "Balance should decrease by 2000");
    }

    @Test
    void testWithdrawExceedingAmount() {
        Withdraw withdraw = new Withdraw();
        ATMTransaction.balance = 3000;
        withdraw.execute(5000); // Try withdrawing more than available balance
        assertEquals(3000, ATMTransaction.balance, "Balance should not change due to insufficient funds");
    }

    @Test
    void testDepositValidAmount() {
        Deposit deposit = new Deposit();
        ATMTransaction.balance = 4000;
        deposit.execute(3000); // Deposit 3000
        assertEquals(7000, ATMTransaction.balance, "Balance should increase by 3000");
    }

    @Test
    void testTransferValidAmount() {
        Transfer transfer = new Transfer();
        ATMTransaction.balance = 8000;
        transfer.execute(2000); // Transfer 2000
        assertEquals(6000, ATMTransaction.balance, "Balance should decrease by 2000");
    }

    @Test
    void testTransferExceedingAmount() {
        Transfer transfer = new Transfer();
        ATMTransaction.balance = 1500;
        transfer.execute(2000); // Try transferring more than balance
        assertEquals(1500, ATMTransaction.balance, "Balance should not change due to insufficient funds");
    }
}
